print('============================')
-- APIS
print('##########################')
print('Loading task library')
os.loadAPI('SkyNet/MWP/lib/task')
print('Loading gps2 library')
os.loadAPI("SkyNet/MWP/lib/movement/gps2")
print('Loading move library')
os.loadAPI('SkyNet/MWP/lib/movement/move')
print('Loading waypoint library')
os.loadAPI("SkyNet/MWP/lib/movement/waypoint")
print('Loading act library')
os.loadAPI('SkyNet/MWP/lib/act')
print('Loading path library')
os.loadAPI("SkyNet/MWP/lib/movement/path")
print('##########################')

corner1 = vector.new(-114,91,359)
corner2 = vector.new(-178,91,359)
corner3 = vector.new(-178,91,427)
corner4 = vector.new(-114,91,423)

home = vector.new(-119,95,366)

path = nil

print('Testing memory preservation: ')
if point2 then
  print(point2.location)
else
  print('Nah bro')
end

point1 = waypoint.waypoint:new('point1',corner1)
point2 = waypoint.waypoint:new('point2',corner2)
point3 = waypoint.waypoint:new('point3',corner3)
point4 = waypoint.waypoint:new('point4',corner4)
-- home = waypoint.waypoint:new('home', home)
print('Testing waypoint creation: ')
print(point4.location)
print('Creating path...')
path = path.path:new('potato')
print('Appending waypoints to potato...')
path:append(point1)
path:append(point2)
path:append(point3)
path:append(point4)
-- path:append(home)

path:start(1, false)

log.close()
